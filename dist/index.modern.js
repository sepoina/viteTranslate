import e from"path";import n from"fnv1a";import r from"fs";function l(e,n){var r,l;if(null==e||null==(r=e.node)||!r.value)return;if(!/_%_(.*?)_%_/.test(e.node.value))return;const a=null==(l=/_%_(.*?)_%_/.exec(e.node.value))?void 0:l[1];if(!a)return;const i=o(a,n);e.node.value=t(e.node.value,i,a),e.node.extra.rawValue&&(e.node.extra.rawValue=t(e.node.extra.rawValue,i,a)),e.node.extra.raw&&(e.node.extra.raw=t(e.node.extra.raw,i,a))}function t(e,n,r){return e.replace(/_%_(.*?)_%_/,`_<_${n}_/_${r}_>_`)}function o(r,l){const t=`${e.parse(l.filename).name}_${n(r).toString(36)}`;return globalThis.TranslateService.baseLng[t]=r,t}var a=e=>{const{types:n}=e;return{visitor:{StringLiteral:l,JSXText:l,TemplateElement:l,JSXOpeningElement(e,r){if("Translate"!==e.node.name.name)return;if(e.node.attributes.find(e=>{var n;return"data-translate"===(null==e||null==(n=e.name)?void 0:n.name)}))return;if(e.node.attributes.find(e=>"c"===(null==e?void 0:e.name.name)))return;const l=e.node.attributes.find(e=>{var n;return"t"===(null==e||null==(n=e.name)?void 0:n.name)})?function(e,n){var r,l,t;const o=n.node.attributes.find(e=>{var n;return"t"===(null==e||null==(n=e.name)?void 0:n.name)});return!!o&&("StringLiteral"===(null==o||null==(r=o.value)?void 0:r.type)?o.value.value:"JSXExpressionContainer"===(null==o||null==(l=o.value)?void 0:l.type)&&"StringLiteral"===(null==o||null==(t=o.value)||null==(t=t.expression)?void 0:t.type)&&o.value.expression.value)}(0,e):function(e){var n;if(1===(null==e||null==(n=e.container)||null==(n=n.children)?void 0:n.length)){var r;const n=e.container.children[0];return"JSXText"===n.type?n.value:!("JSXExpressionContainer"!==n.type||null==n||null==(r=n.expression)||!r.value)&&n.expression.value}return!1}(e);if(!1===l)throw"Errore, Translate deve contenere solo stringhe";const t=o(l,r),a=n.jSXAttribute(n.jSXIdentifier("data-translate"),n.stringLiteral(t));e.node.attributes.push(a)}}}};function i(e){return{name:"onRollupTranslate",buildStart:{sequential:!0,order:"pre",handler:()=>{globalThis.TranslateService=e,globalThis.TranslateService.baseLng={__lngVersion__:Date.now()},console.log("Preparo il servizio traduzioni.")}},buildEnd:{sequential:!0,order:"post",handler:()=>{!function(){const e=globalThis.TranslateService.file,n=globalThis.TranslateService.dist;console.log("TRANSLATE ---------------------------------------------"),console.log("Carico traduzione base.");try{r.readFile(e,"utf8",(l,t)=>{let o={newest:!0,changed:!0},a=null;l?(console.log(`Non esiste ancora il file ${e}, tento di crearlo`),a=globalThis.TranslateService.baseLng):(a=JSON.parse(t),o=function(e,n){const r={changed:!1,deleted:0,added:0};for(const l in e)l in n||(delete e[l],r.changed=!0,r.deleted+=1);for(const l in n)l in e||(e[l]=n[l],r.changed=!0,r.added+=1);return r.changed&&(e.__lngVersion__=n.__lngVersion__),r}(a,globalThis.TranslateService.baseLng)),o.changed?(console.log(`Update avvenuto: ${o.newest?"Nuovo file,":`(${o.added} agginte, ${o.deleted} rimosse)`} salvo.`),r.writeFile(e,JSON.stringify(a,null,2),"utf8",l=>{l?console.error(`Errore durante la scrittura su ${e}`,l):(console.log(`Dati scritti con successo su ${e}`),r.copyFile(e,n,e=>{e||console.log(`Copiato con successo su ${n}`),console.log("END TRANSLATE ---------------------------------------------")}))})):(console.log("Nessun cambiamento."),console.log("END TRANSLATE ---------------------------------------------"))})}catch(n){return void console.error(`Errore l'elaborazione di ${e}, cancellalo`,n)}}()}}}}export{a as babelTranslate,i as rollupTranslate};
//# sourceMappingURL=index.modern.js.map
